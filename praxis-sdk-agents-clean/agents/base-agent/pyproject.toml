[project]
name = "base-agent"
version = "0.1.0"
description = "Base agent for Ray Serve"
authors = [{ name = "Your Name", email = "you@example.com" }]
readme = "README.md"
requires-python = ">=3.9,<4.0"
dependencies = [
    "fastapi (>=0.115.8,<1.0.0)",
    "openai (>=1.63.2,<2.0.0)",
    "langchain (>=0.3.19,<0.4.0)",
    "jinja2 (>=3.1.5,<4.0.0)",
    "pydantic-settings (>=2.8.0,<3.0.0)",
    "langfuse (>=2.59.3,<3.0.0)",
    "langchain-openai (>=0.3.6,<0.4.0)",
    "mem0ai==0.1.67",
]

[tool.poetry]
packages = [{ include = "*", from = "src" }]


[project.entry-points."agent.executor.config"]
basic = "base_agent.langchain.config:get_langchain_config"

[project.entry-points."agent.executor.entrypoint"]
basic = "base_agent.langchain.executor:agent_executor"

[project.entry-points."agent.prompt.config"]
basic = "base_agent.prompt.config:get_prompt_config"

[project.entry-points."agent.prompt.entrypoint"]
basic = "base_agent.prompt.builder:prompt_builder"

[project.entry-points."agent.workflow.config"]
basic = "base_agent.workflows.config:get_workflow_config"

[project.entry-points."agent.workflow.entrypoint"]
basic = "base_agent.workflows.runner:dag_runner"

[project.entry-points."agent.entrypoint"]
basic = "base_agent.ray_entrypoint:agent_builder"

[project.entry-points."ai.registry.config"]
basic = "base_agent.ai_registry.config:get_ai_registry_config"

[project.entry-points."ai.registry.entrypoint"]
basic = "base_agent.ai_registry.client:ai_registry_client"

[project.entry-points."domain.knowledge.config"]
basic = "base_agent.domain_knowledge.config:get_light_rag_config"

[project.entry-points."domain.knowledge.entrypoint"]
basic = "base_agent.domain_knowledge.client:light_rag_client"

[project.entry-points."memory.entrypoint"]
basic = "base_agent.memory.client:memory_client"

[tool.poetry.group.dev.dependencies]
ray = { extras = ["serve"], version = "^2.42.1" }
pytest = "^8.3.4"
pyarrow = "^19.0.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
