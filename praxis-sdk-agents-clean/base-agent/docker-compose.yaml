services:
  redis:
    image: redislabs/redisearch:latest
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  lightrag:
    image: ghcr.io/hkuds/lightrag:latest
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      STORAGE_URL: s3://${MINIO_BUCKET}
      STORAGE_ENDPOINT: http://minio:9000
      STORAGE_ACCESS_KEY: ${MINIO_ROOT_USER}
      STORAGE_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

  ray-head:
    build:
      context: .
      dockerfile: Dockerfile
    image: base-agent
    platform: linux/amd64
    shm_size: '4gb'
    entrypoint: []
    command: >
      bash -c "ray start --head --port=10001 --ray-client-server-port=9999 --dashboard-host=0.0.0.0 --dashboard-port=8265 --include-dashboard=true --block"
    ports:
      - "10001:10001"
      - "9999:9999"
      - "8265:8265"
    environment:
      RAY_DISABLE_IMPORT_WARNING: "1"
    healthcheck:
      test: ["CMD-SHELL", "ray status || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 60s

  ray-worker:
    image: base-agent
    platform: linux/amd64
    shm_size: '4gb'
    entrypoint: ["./docker-entrypoint.sh"]
    command: ${AGENT_TO_RUN}
    ports:
      - "8000:8000"
    depends_on:
      ray-head:
        condition: service_healthy
    environment:
      RAY_ADDRESS: ray-head:10001
      RAY_DISABLE_IMPORT_WARNING: "1"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      POSTGRES_HOST: postgres
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      KB_API_URL: http://lightrag:8080
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      # Libp2p configuration
      REGISTRY_HTTP_URL: ${REGISTRY_HTTP_URL}
      REGISTRY_RELAY_PEER_ID: ${REGISTRY_RELAY_PEER_ID}
      REGISTRY_RELAY_MULTIADDR_TEMPLATE: ${REGISTRY_RELAY_MULTIADDR_TEMPLATE}
      AGENT_P2P_LISTEN_ADDR: ${AGENT_P2P_LISTEN_ADDR}
      AGENT_NAME: ${AGENT_NAME}
    # volumes:
    #   - ./py-libp2p:/serve_app/py-libp2p:ro

volumes:
  pgdata:
  minio-data: