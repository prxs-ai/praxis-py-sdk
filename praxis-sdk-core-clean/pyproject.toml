[project]
name = "praxis-sdk-core"
version = "0.1.0"
description = "Praxis SDK Core - monorepo with shared Python packages"
authors = [
    {name = "Praxis Team"}
]
requires-python = ">=3.10"
dependencies = []

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "BLE001",
    "F821",
    "PERF",
    "INP001",
    "A001",
    "PLW2901",
    "G",
    "E501",
    "PTH",
    "TRY",
    "ARG",
    "C",
    "ERA",
    "PLR",
    "DTZ",
    "S",
    "RUF",
    "PERF203",
    "ANN",
    "TRY401",
    "EM",
    "FBT",
    "TRY003",
    "D1",
    "D203",
    "D213",
    "G004",
    "FA",
    "COM812",
    "ISC001",
    "RUF001",
    "B904",
    "ASYNC230",
    "FIX002",
    "T",
    "T201",
    "T203",
    "SLF001",
    "PGH003",
    "F401",
    "N806",
    "N803",
    "N815",
    "N812",
    "N818",
    "PD901",
    "D400",
    "D401",
    "D405",
    "D415",
    "D417",
    "D205",
    "UP035",
    "UP008",
    "LOG015",
    "SIM102",
    "SIM105",
    "SIM117",  # Use single with statement
    "RET504",
    "B006",
    "B018",
    "E101",
    "E741",
    "TC002",
    "TC003",
    "PYI063",
    "A002",
    "F841",
    "TD002",
    "TD003",
    "TD004",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


[tool.mypy]
python_version = "3.10"

warn_return_any = false
warn_unused_configs = false
check_untyped_defs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_calls = false
disallow_any_generics = false
disallow_any_unimported = false
disallow_subclassing_any = false
warn_redundant_casts = false
warn_unused_ignores = false
strict_optional = false
strict_equality = false
ignore_missing_imports = true
ignore_errors = false
show_error_codes = true
follow_imports = "silent"
namespace_packages = true
explicit_package_bases = true

exclude = [
    "tests",
    "build",
    "dist",
]

disable_error_code = [
    "no-untyped-def",
    "no-untyped-call",
    "no-any-return",
    "misc",
    "type-arg",
    "unused-ignore",
    "override",
    "assignment",
    "arg-type",
    "call-overload",
    "return-value",
    "attr-defined",
    "name-defined",
    "call-arg",
    "var-annotated",
    "valid-type",
    "comparison-overlap",
    "unused-coroutine",
]

[[tool.mypy.overrides]]
module = [
    "pydantic.*",
    "pydantic_settings.*",
    "aiohttp.*",
    "fastapi.*",
    "redis.*",
    "qdrant_client.*",
    "loguru.*",
    "pandas.*",
    "openai.*",
    "aiolimiter.*",
    "undetected_chromedriver.*",
    "selenium.*",
    "google.*",
    "msgspec.*",
    "boto3.*",
    "aiobotocore.*",
    "tenacity.*",
    "hyperliquid.*",
]
ignore_errors = true

[tool.uv]
dev-dependencies = ["pre-commit >=3.6.0", "ruff >=0.11.12", "mypy >=1.16.0", "pytest >=8.0.0"]

[tool.setuptools]

[build-system]
requires = ['setuptools>=61.0']
build-backend = "setuptools.build_meta"

