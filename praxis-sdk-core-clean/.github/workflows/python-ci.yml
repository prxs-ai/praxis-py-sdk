name: Python CI - Package Tests
on:
  push:
    branches-ignore:
      - "main"
      - "staging"
      - "hotfix/**"
      - "release/**"
    paths:
      - "packages/**"
      - "tests/**"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "packages/**"
      - "tests/**"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [
          "agents-tools-logger",
          "ai-tools",
          "coingecko-client",
          "creativity-schemas"
        ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Check if package directory exists
        run: |
          if [ ! -d "packages/${{ matrix.package }}" ]; then
            echo "Package directory packages/${{ matrix.package }} does not exist"
            exit 0
          fi
      - name: Install Poetry (if package uses Poetry)
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install dependencies for ${{ matrix.package }}
        working-directory: packages/${{ matrix.package }}
        run: |
          if [ -f "pyproject.toml" ]; then
            echo "Installing with Poetry"
            poetry install
            poetry run pip install pytest-cov
          elif [ -f "requirements.txt" ]; then
            echo "Installing with pip"
            pip install -r requirements.txt
            pip install pytest pytest-cov
          else
            echo "Installing basic testing dependencies"
            pip install pytest pytest-cov
          fi
      - name: Run tests for ${{ matrix.package }}
        working-directory: packages/${{ matrix.package }}
        run: |
          # Create pytest.ini for coverage configuration
          cat > pytest.ini << EOF
          [tool:pytest]
          addopts = --cov=. --cov-report=term-missing --cov-report=xml:coverage.xml --cov-fail-under=80
          EOF
          
          if [ -f "pyproject.toml" ]; then
            if [ -d "tests" ]; then
              echo "Running tests from tests/ directory"
              poetry run pytest tests/ -v
            elif [ -f "Makefile" ]; then
              echo "Running tests via Makefile"
              poetry run make test
            else
              echo "Running all test files"
              poetry run pytest . -v --ignore=build --ignore=dist
            fi
          else
            if [ -d "tests" ]; then
              echo "Running tests from tests/ directory"
              pytest tests/ -v
            else
              echo "Running all test files"
              pytest . -v --ignore=build --ignore=dist
            fi
          fi
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ matrix.package }}
          path: packages/${{ matrix.package }}/coverage.xml