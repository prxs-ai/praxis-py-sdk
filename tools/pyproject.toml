[project]
name = "praxis-sdk-providers"
version = "0.0.1"
description = "Base provider implemnetation for Praxis"
authors = [{ name = "Your Name", email = "you@example.com" }]
readme = "README.md"
requires-python = ">=3.9,<4.0"
dependencies = [
    "fastapi (>=0.115.8,<1.0.0)",
    "pydantic-settings (>=2.8.0,<3.0.0)",
    "faststream[kafka] (>=0.5.37,<0.6.0)",
    "fast-depends (>=2.4.12,<3.0.0)",
]

[project.entry-points."provider.entrypoint"]
basic = "base_provider.ray_entrypoint:provider_builder"

[project.entry-points."provider.contract.entrypoint"]
basic = "base_provider.contract.base:get_data_contract"

[project.entry-points."provider.trigger.entrypoint"]
basic = "base_provider.triggers.base:get_data_trigger"

[project.entry-points."provider.source.entrypoint"]
basic = "base_provider.sources.base:get_data_source"

[project.entry-points."provider.processor.entrypoint"]
basic = "base_provider.processors.base:get_data_processor"

[project.entry-points."provider.sink.entrypoint"]
basic = "base_provider.sinks.base:get_data_sink"
kafka = "base_provider.sinks.kafka:get_kafka_data_sink"

[project.entry-points."provider.stream.entrypoint"]
basic = "base_provider.stream.base:get_data_stream"

[project.entry-points."provider.runner.entrypoint"]
basic = "base_provider.runner.base:get_runner"


[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "BLE001",
    "F821",
    "PERF",
    "INP001",
    "A001",
    "PLW2901",
    "G",
    "E501",
    "PTH",
    "TRY",
    "ARG",
    "C",
    "ERA",
    "PLR",
    "DTZ",
    "S",
    "RUF",
    "PGH003",
    "PERF203",
    "ANN",
    "TRY401",
    "EM",
    "FBT",
    "TRY003",
    "D1",
    "D203",
    "D213",
    "G004",
    "FA",
    "COM812",
    "ISC001",
    "RUF001",
    "B904",
    "SLF001",
    "ASYNC110",
    "ASYNC210",
    "ASYNC230",
    "FIX002",
    "T",
    "T201",
    "T203",
]

[tool.ruff.format]
quote-style = "double"


[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = false
check_untyped_defs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_calls = false
disallow_any_generics = false
disallow_any_unimported = false
disallow_subclassing_any = false
warn_redundant_casts = false
warn_unused_ignores = false
strict_optional = false
strict_equality = false
ignore_missing_imports = true
ignore_errors = false
show_error_codes = true
follow_imports = "silent"

exclude = [
    "tests/",
    "build/",
    "dist/",
]

disable_error_code = [
    "no-untyped-def",
    "no-untyped-call",
    "no-any-return",
    "misc",
    "type-arg",
    "unused-ignore",
    "override",
    "assignment",
    "arg-type",
    "call-overload",
    "return-value",
    "attr-defined",
    "name-defined",
    "call-arg",
    "var-annotated",
    "valid-type",
    "comparison-overlap",
    "unused-coroutine",
]

[[tool.mypy.overrides]]
module = [
    "pydantic.*",
    "pydantic_settings.*",
    "ray.*",
    "faststream.*",
    "fast_depends.*",
]
ignore_errors = true

[tool.uv]
dev-dependencies = ["pytest >=8.3.4", "pyarrow >=19.0.1", "factory-boy >=2.12.0", "pytest-trio >=0.8.0", "pytest-asyncio >=1.0.0", "pre-commit >=4.2.0", "ruff >=0.11.12", "mypy >=1.16.0"]

[tool.setuptools.packages.find]
include = ['*']
where = ['src']

[build-system]
requires = ['setuptools>=61.0']
build-backend = "setuptools.build_meta"

