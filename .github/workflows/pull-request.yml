name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]
    types: [opened, edited, synchronize, reopened]

concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-pr-title:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false

  pre-commit:
    name: Pre-commit checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          check-latest: true

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry --version

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true
          poetry env use python

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: venv-${{ runner.os }}-py${{ steps.setup-python.outputs.python-version || '3.11' }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-py${{ steps.setup-python.outputs.python-version || '3.11' }}-

      - name: Install project dependencies
        run: |
          poetry install --no-interaction --no-ansi

      - name: Install pre-commit
        run: |
          pip install pre-commit

      - name: Cache pre-commit hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-

      - name: Run pre-commit on all files
        env:
          POETRY_VIRTUALENVS_IN_PROJECT: "true"
        run: |
          pre-commit run --all-files
